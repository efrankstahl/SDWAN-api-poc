{% set table_count = TableCount(4) %}
{% set ns = namespace() %}
[
    {"HEADING_2":{"text": "Enterprise Global Prefixes"}},
    {"paragraph": {"text": "List of globally identified Enterprise Prefixes is shown in the following table."}},
    {"table":
        {
            "headers": ["Enterprise Global Prefixes"],
            "col_widths": [],
            "head_caption": {"text":  "Table {{table_count.next()}} – Enterprise Global Prefixes"},
            "values": [[{{j_dumps('\n'.join(data.enterprise_prefixes))}}]]
        }
    },
    {"HEADING_2": {"text": "Stack Policies"}},
    {"paragraph": {"text": "his section describes the Application Policies to be used for standardization of the SD-WAN deployment. Prisma SD-WAN uses mapping of third-party services and Prisma SD-WAN data centers to allow flexibility when creating network policy rules, while accounting for uniqueness across sites."}},
{# START Path Stack Policies #}
    {"HEADING_3": {"text": "Path Policies"}},
    {"HEADING_4": {"text": "Path Policy Stack(s)"}},
    {"paragraph": {"text": "The following table shows the Path Policy Stacks and associated Policy Sets."}},
    {"table":
        {
            "headers": ["Path Policy Stack", "Path Policy Set(s)", "Default Path Policy Set"],
            "col_widths": [120],
            "head_caption": {"text":  "Table {{table_count.next()}} – Path Policy Stack(s)"},
            "values":
            [
{% for s_name, s_value in data.path.path_policy_stacks.items() %}
                [
                    "{{s_name}}", {{j_dumps('\n'.join(s_value.policysets))}}, "{{s_value.defaultrule_policyset}}"
                ]{% if data.path.path_policy_stacks|length != loop.index %},{{ "\n" }}{% endif %}
{% endfor %}
{{ "\n" }}            ]
        }
    },
{# END Path Stack Policies #}
{# START Path Set Policies #}
    {"HEADING_4": {"text": "Path Policy Set(s)"}},
{% for set_name, set_value in data.path.path_policy_sets.items() %}
    {"HEADING_5": {"text": "{{set_name}}"}},
{% if set_value.policyrules %}
    {"paragraph": {"text": "The following table shows the path policy rules in the {{set_name}} Policy Set."}},
    {"table":
        {
            "headers": ["Rule Name", "Order No.", "Network Context", "Src Prefix", "Dst Prefix", "Apps", "Service & DC Groups"],
            "col_widths": [60, 38, 54, 54, 54, 60],
            "head_caption": {"text": "Table {{table_count.next()}} – {{set_name}} Path Policy Set Rule(s)"},
            "values":
            [
{% for pr_name, pr_value in set_value.policyrules.items() %}
{# START Parse the Path Policies Doing the filtering here#}
{% set ns.parsed_paths = dict.fromkeys(pr_value.paths_allowed.keys(), "") %}
{% for p_priority, p_list in pr_value.paths_allowed.items()%}
{% if p_list %}
{% for item in p_list %}
{% if item.path_type == 'vpn' %}
{% set _ = ns.parsed_paths.update({p_priority:ns.parsed_paths[p_priority]+"Prisma SD-WAN VPN on "}) %}
{% elif item.path_type == 'servicelink' %}
{% set _ = ns.parsed_paths.update({p_priority:ns.parsed_paths[p_priority]+"Standard VPN on "}) %}
{% else %}
{% set _ = ns.parsed_paths.update({p_priority:ns.parsed_paths[p_priority]+"Direct on "}) %}
{% endif %}
{% if item.label[-1] == '*' %}
{% set _ = ns.parsed_paths.update({p_priority:ns.parsed_paths[p_priority]+"Any "+item.label[:-2].capitalize()+"\n"}) %}
{%else%}
{% set _ = ns.parsed_paths.update({p_priority:ns.parsed_paths[p_priority]+data.circuit_categories[item.label]['name']+"\n"}) %}
{% endif %}
{%endfor%}
{% endif %}
{%endfor%}
{# Convert parsed_paths into a str #}
{% set ns.parsed_paths_str = ""%}
{% for p_name, p_val in ns.parsed_paths.items() %}
{% if p_val %}
{% if ns.parsed_paths_str %}{%set ns.parsed_paths_str = ns.parsed_paths_str +"\n"%}{%endif%}
{% set ns.parsed_paths_str = ns.parsed_paths_str+" ".join(p_name.split('_')[:-1]).capitalize()+":\n" %}
{% set ns.parsed_paths_str = ns.parsed_paths_str+p_val %}
{%endif%}
{%endfor%}
{# END Parse the Path Policies#}
                [
                    "{{pr_name}}",
                    "{{pr_value.order_number}}",
                    {% if pr_value.network_context %}{{j_dumps('\n'.join(pr_value.network_context))}}{%else%}"None"{%endif%},
                    {% if pr_value.source_prefixes %}{{j_dumps('\n'.join(pr_value.source_prefixes))}}{%else%}"None"{%endif%},
                    {% if pr_value.destination_prefixes %}{{j_dumps('\n'.join(pr_value.destination_prefixes))}}{%else%}"None"{%endif%},
                    {% if pr_value.app_defs %}{{j_dumps('\n'.join(pr_value.app_defs))}}{%else%}""{%endif%},
                    {{j_dumps(ns.parsed_paths_str)}},
                    "{% if pr_value.service_context %}{% if pr_value.service_context.active_service_label %}Active: {{pr_value.service_context.active_service_label}}\n{%endif%}{% if pr_value.service_context.active_service_label %}Backup: {{pr_value.service_context.backup_service_label}}{%endif%}{%else%}None{%endif%}"
                ]{% if set_value.policyrules|length != loop.index %},{{ "\n" }}{% endif %}
{% endfor %}
            ]
        }
    },
{%else%}
{# Add the following if no rules#}
    {"paragraph": {"text": "No path policy rules were configured for {{set_name}} Policy Set."}},
{%endif%}
{% endfor %}
{# END Path Set Policies #}

{# START QOS Section #}
{# START QoS Stacks #}
    {"HEADING_3": {"text": "QoS Policies"}},
    {"HEADING_4": {"text": "QoS Policy Stack(s)"}},
    {"paragraph": {"text": "The following table shows the QoS Policy Stacks and associated Policy Sets."}},
    {"table":
        {
            "headers": ["QoS Policy Stack", "QoS Policy Set(s)", "Default QoS Policy Set"],
            "col_widths": [120],
            "head_caption": {"text": "Table {{table_count.next()}} – QoS Policy Stack(s)"},
            "values":
            [
{% for s_name, s_value in data.qos.qos_policy_stacks.items() %}
                [
                    "{{s_name}}", {{j_dumps('\n'.join(s_value.policysets))}}, "{{s_value.defaultrule_policyset}}"
                ]{% if data.qos.qos_policy_stacks|length != loop.index %},{{ "\n" }}{% endif %}
{% endfor %}
{{ "\n" }}            ]
        }
    },
{# END QoS Stacks #}
{# START QoS Sets #}
{% for set_name, set_values in data.qos.qos_policy_sets.items() %}
    {"HEADING_5": {"text": "{{set_name}}"}},
{% if set_values.policyrules %}
    {"paragraph": {"text": "The following table shows the QoS policy rules in the {{set_name}} Policy Set."}},
    {"table":
        {
            "headers": ["Rule Name", "Order No.", "Network Context", "Src Prefix", "Dst Prefix", "Apps", "Priority", "DSCP"],
            "col_widths": [60, 38, 54, 54, 54, 60],
            "head_caption": {"text": "Table {{table_count.next()}} – {{set_name}} QoS Policy Set Rule(s)"},
            "values":
            [
                {% for pr_name, pr_value in set_values.policyrules.items() %}
                [
                    "{{pr_name}}",
                    "{{pr_value.order_number}}",
                    {% if pr_value.network_context %}{{j_dumps('\n'.join(pr_value.network_context))}}{%else%}"None"{%endif%},
                    {% if pr_value.source_prefixes %}{{j_dumps('\n'.join(pr_value.source_prefixes))}}{%else%}"None"{%endif%},
                    {% if pr_value.destination_prefixes %}{{j_dumps('\n'.join(pr_value.destination_prefixes))}}{%else%}"None"{%endif%},
                    {% if pr_value.app_defs %}{{j_dumps('\n'.join(pr_value.app_defs))}}{%else%}""{%endif%},
                    "{% if pr_value.priority_number==1 %}Platinum{% elif pr_value.priority_number==2 %}Gold{% elif pr_value.priority_number==3 %}Silver{% else %}Bronze{%endif%}",
                    "{% if pr_value.dscp is not none %}0x{{ "%0x" % pr_value.dscp.value }}{%endif%}"
                ]{% if set_values.policyrules|length != loop.index %},{{ "\n" }}{% endif %}
                {%endfor%}
            ]
        }
    },
{%else%}
{"paragraph": {"text": "No QoS policy rules were configured for {{set_name}} Policy Set."}},
{%endif%}
{%endfor%}
{# END QoS Sets #}
{# END QOS Section #}
{# START NAT Section #}
{#START NAT Stacks#}
    {"HEADING_3": {"text": "NAT Policies"}},
    {"HEADING_4": {"text": "NAT Policy Stack(s)"}},
    {"paragraph": {"text": "The following table shows the NAT Policy Stacks and associated Policy Sets."}},
    {
        "table": {
            "headers": ["NAT Policy Stack", "NAT Policy Set(s)"],
            "col_widths": [144],
            "head_caption": {"text": "Table {{table_count.next()}} – NAT Policy Stack(s)"},
            "values":
            [
                {% for s_name, s_value in data.nat.nat_policy_stacks.items() %}
                [
                    "{{s_name}}", {{j_dumps('\n'.join(s_value.policysets))}}
                ]{% if data.nat.nat_policy_stacks|length != loop.index %},{{ "\n" }}{% endif %}
                {%endfor%}
            ]
        }
    },
{# END NAT Stacks#}
{# START NAT Sets#}

{# END NAT Sets#}
{# END NAT Section #}
    {"HEADING_4": {"text": "NAT Policy Set(s)"}},
{% for s_name, s_value in data.nat.nat_policy_sets.items() %}
    {"HEADING_5": {"text": "{{s_name}}"}},
    {"HEADING_6": {"text": "Source Zone NAT Rules"}},
    {% if s_value.source_zone_policyrule_order %}
    {"paragraph": {"text": "The following table shows the Source Zone based NAT policies for the {{nat_set_name}} Policy Set."}},

    {% else %}
    {"paragraph": {"text": "No Source Zone NAT rules are defined in the {{s_name}} Policy Set."}},
    {% endif %}


    {"HEADING_6": {"text": "Destination Zone NAT Rules"}},
    {% if s_value.source_zone_policyrule_order %}
    {% else %}
    {"paragraph": {"text": "No Destination Zone NAT rules are defined in the {{s_name}} Policy Set."}},
    {% endif %}


{% endfor %}



{"paragraph": {"text": "THE END Just a Place Holder so I don't have to count commas"}}

]